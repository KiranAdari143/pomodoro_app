// android/app/build.gradle

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

import java.util.Properties

// 1) Load your key.properties (in project root)
def keyPropertiesFile = rootProject.file("key.properties")
def keyProperties = new Properties()
if (keyPropertiesFile.exists()) {
    keyProperties.load(new FileInputStream(keyPropertiesFile))
} else {
    println "WARNING: key.properties not found at ${keyPropertiesFile}; using debug keystore!"
}

android {
    namespace = "com.example.pomedaro_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    defaultConfig {
        applicationId "com.example.pomedaro_app"
        minSdk        = flutter.minSdkVersion
        targetSdk     = flutter.targetSdkVersion
        versionCode   = flutter.versionCode
        versionName   = flutter.versionName
    }

    // 2) Signing configuration
    signingConfigs {
        config {
            keyAlias       keyProperties['keyAlias']
            keyPassword    keyProperties['keyPassword']
            // Since this file lives in android/app/, refer to it directly:
            storeFile      file(keyProperties['storeFile'] ?: 'upload-keystore.jks')
            storePassword  keyProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            shrinkResources false
            minifyEnabled    false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-firestore'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
}

// suppress obsoleteâ€‘options warning
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:-options"
}
